FUNCTION CaesarEncrypt(char, shift):
    
    IF char is a letter:
        shift_base = 'A' IF char is uppercase, ELSE 'a'
        encrypted_char = (char - shift_base + shift) % 26 + shift_base
        RETURN encrypted_char
    ELSE:
        RETURN char

FUNCTION DivideAndConquerDecrypt(message, shift):
    IF length of message <= 1:
        RETURN CaesarEncrypt(message, shift)
    
    mid = length(message) // 2
    
    left_half = message[0 to mid]
    right_half = message[mid to end]
    
    decrypted_left = DivideAndConquerDecrypt(left_half, shift)
    decrypted_right = DivideAndConquerDecrypt(right_half, shift)
    
    ELSE:
        RETURN decrypted_left + decrypted_right



1 FUNCTION CaesarEncrypt(char, shift):
2    encrypted_text = ""
 
3    FOR each character IN plaintext:
4        IF char is a letter:
5            shift_base = 'A' IF char is uppercase, ELSE 'a'
6            encrypted_char = (char - shift_base + shift) % 26 + shift_base
7            Append encrypted_char to encrypted_text
8        ELSE:
9           Append char to encrypted_text (non-letter characters remain the same)
